name: Syncing Tags

on:
  release:
    types:
      - published
      
permissions: 
  contents: write
  pull-requests: write

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }} 

      - name: Finding SHA with latest Tag
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          COMMIT_SHA=$(git rev-list -n 1 $LATEST_TAG)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
      
      - name: Finding Branch with SHA
        run: |
          # Remove 'origin/' prefix and get clean branch name
          RELEASE_BRANCH=$(git branch -r --contains ${{ env.COMMIT_SHA }} | sed 's/origin\///' | sed 's/^[[:space:]]*//' | head -n1)
          echo "RELEASE_BRANCH=$RELEASE_BRANCH" >> $GITHUB_ENV
      
      - name: Debug Environment Variables
        run: |
          echo "Latest Tag: ${{ env.LATEST_TAG }}"
          echo "Commit SHA: ${{ env.COMMIT_SHA }}"
          echo "Release Branch: ${{ env.RELEASE_BRANCH }}"
      
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          signoff: true
          branch: ${{ env.RELEASE_BRANCH }}
          base: main
          delete-branch: false
          title: 'New Thanos Release ${{ env.LATEST_TAG }}'
          body: |
            This PR merges the new release ${{ env.LATEST_TAG }} from branch ${{ env.RELEASE_BRANCH }} to main.
            
            **Release Details:**
            - Tag: ${{ env.LATEST_TAG }}
            - Commit SHA: ${{ env.COMMIT_SHA }}
            - Source Branch: ${{ env.RELEASE_BRANCH }}
          draft: false

      - name: Output PR Details
        if: steps.cpr.outputs.pull-request-number
        run: |
          echo "Pull Request created: #${{ steps.cpr.outputs.pull-request-number }}"
          echo "PR URL: ${{ steps.cpr.outputs.pull-request-url }}"
          
      # - name: Merging Release into main
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git checkout -b main || git checkout main
      #     git merge --no-ff ${{ env.RELEASE_BRANCH }} -m "Merge $RELEASE_BRANCH into main after release"
      #     git push origin main
      